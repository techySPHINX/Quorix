apiVersion: apps/v1
kind: Deployment
metadata:
  name: evently-worker
  namespace: evently
  labels:
    app: evently-worker
    version: v1
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: evently-worker
      version: v1
  template:
    metadata:
      labels:
        app: evently-worker
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: evently-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: evently-worker
          image: evently/api:latest
          imagePullPolicy: Always
          command: ["celery"]
          args:
            [
              "-A",
              "app.celery_app",
              "worker",
              "--loglevel=info",
              "--concurrency=4",
              "--max-tasks-per-child=1000",
              "--prefetch-multiplier=1",
              "--optimization=fair",
            ]
          env:
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: ENVIRONMENT
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: SECRET_KEY
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: DB_HOST
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: DB_PASSWORD
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: REDIS_HOST
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: REDIS_PASSWORD
            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: SENDGRID_API_KEY
          envFrom:
            - configMapRef:
                name: evently-config
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - "celery -A app.celery_app inspect ping -d celery@$HOSTNAME"
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - evently-worker
                topologyKey: kubernetes.io/hostname
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: evently-worker-hpa
  namespace: evently
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: evently-worker
  minReplicas: 2
  maxReplicas: 20
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 85
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 4
          periodSeconds: 60
      selectPolicy: Max
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: evently-beat
  namespace: evently
  labels:
    app: evently-beat
    version: v1
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: evently-beat
      version: v1
  template:
    metadata:
      labels:
        app: evently-beat
        version: v1
    spec:
      serviceAccountName: evently-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: evently-beat
          image: evently/api:latest
          imagePullPolicy: Always
          command: ["celery"]
          args:
            [
              "-A",
              "app.celery_app",
              "beat",
              "--loglevel=info",
              "--schedule=/tmp/celerybeat-schedule",
            ]
          env:
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: ENVIRONMENT
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: SECRET_KEY
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: DB_HOST
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: DB_PASSWORD
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: REDIS_HOST
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: REDIS_PASSWORD
          envFrom:
            - configMapRef:
                name: evently-config
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: beat-schedule
              mountPath: /app/beat-schedule
      volumes:
        - name: tmp
          emptyDir: {}
        - name: beat-schedule
          emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: evently-flower
  namespace: evently
  labels:
    app: evently-flower
    version: v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: evently-flower
      version: v1
  template:
    metadata:
      labels:
        app: evently-flower
        version: v1
    spec:
      serviceAccountName: evently-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: evently-flower
          image: evently/api:latest
          imagePullPolicy: Always
          command: ["celery"]
          args:
            [
              "-A",
              "app.celery_app",
              "flower",
              "--port=5555",
              "--basic_auth=admin:$(CELERY_FLOWER_PASSWORD)",
            ]
          ports:
            - name: http
              containerPort: 5555
              protocol: TCP
          env:
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: ENVIRONMENT
            - name: CELERY_FLOWER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: CELERY_FLOWER_PASSWORD
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: REDIS_HOST
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: REDIS_PASSWORD
          envFrom:
            - configMapRef:
                name: evently-config
          resources:
            requests:
              memory: "128Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: tmp
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: evently-flower-service
  namespace: evently
  labels:
    app: evently-flower
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app: evently-flower
