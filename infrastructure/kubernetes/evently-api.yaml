apiVersion: v1
kind: Namespace
metadata:
  name: evently
  labels:
    name: evently
    app.kubernetes.io/name: evently
    app.kubernetes.io/part-of: evently-platform
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: evently-api
  namespace: evently
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/evently-pod-role
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: evently-config
  namespace: evently
data:
  ENVIRONMENT: "production"
  PROJECT_NAME: "Evently"
  VERSION: "1.0.0"
  API_V1_STR: "/api/v1"

  # Database Configuration
  DB_HOST: "evently-postgres.cluster-xyz.us-west-2.rds.amazonaws.com"
  DB_PORT: "5432"
  DB_NAME: "evently"
  DB_USER: "evently_user"
  DB_POOL_SIZE: "20"
  DB_MAX_OVERFLOW: "30"
  DB_POOL_TIMEOUT: "30"
  DB_POOL_RECYCLE: "3600"
  DB_POOL_PRE_PING: "true"
  DB_ECHO: "false"

  # Redis Configuration
  REDIS_HOST: "evently-redis.xyz.cache.amazonaws.com"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  REDIS_POOL_SIZE: "20"
  REDIS_SOCKET_TIMEOUT: "5"
  REDIS_SOCKET_CONNECT_TIMEOUT: "5"
  REDIS_CONNECTION_POOL_MAX_CONNECTIONS: "50"

  # Celery Configuration
  CELERY_BROKER_URL: "redis://evently-redis.xyz.cache.amazonaws.com:6379/1"
  CELERY_RESULT_BACKEND: "redis://evently-redis.xyz.cache.amazonaws.com:6379/2"

  # CORS Configuration
  BACKEND_CORS_ORIGINS: "https://evently.yourdomain.com,https://app.evently.yourdomain.com"
  ALLOWED_HOSTS: "evently.yourdomain.com,app.evently.yourdomain.com"

  # Security Configuration
  SECURITY_BLOCKED_IPS: ""
  SECURITY_BLOCKED_SUBNETS: ""
  RATE_LIMIT_WHITELIST: "127.0.0.1,::1"

  # Scalability Configuration
  RATE_LIMIT_ENABLED: "true"
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "3600"
  MAX_REQUEST_SIZE: "10485760" # 10MB

  # Monitoring Configuration
  ENABLE_PROMETHEUS: "true"
  ENABLE_METRICS_COLLECTION: "true"
  PROMETHEUS_PORT: "8000"

  # Email Configuration
  EMAILS_ENABLED: "true"
  SENDGRID_FROM_EMAIL: "noreply@evently.yourdomain.com"
  SENDGRID_FROM_NAME: "Evently Platform"
  EMAIL_NOTIFICATION_RETRIES: "3"
  EMAIL_BATCH_SIZE: "10"
  EMAIL_BATCH_DELAY: "1.0"
---
apiVersion: v1
kind: Secret
metadata:
  name: evently-secrets
  namespace: evently
type: Opaque
stringData:
  # These will be replaced by CI/CD pipeline with actual secret values
  SECRET_KEY: "PLACEHOLDER_SECRET_KEY"
  JWT_SECRET_KEY: "PLACEHOLDER_JWT_SECRET_KEY"
  ENCRYPTION_KEY: "PLACEHOLDER_ENCRYPTION_KEY"
  DB_PASSWORD: "PLACEHOLDER_DB_PASSWORD"
  REDIS_PASSWORD: "PLACEHOLDER_REDIS_PASSWORD"
  SENDGRID_API_KEY: "PLACEHOLDER_SENDGRID_API_KEY"
  SENDGRID_FROM_EMAIL: "PLACEHOLDER_SENDGRID_FROM_EMAIL"
  CELERY_FLOWER_PASSWORD: "PLACEHOLDER_FLOWER_PASSWORD"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: evently-api
  namespace: evently
  labels:
    app: evently-api
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: evently-api
      version: v1
  template:
    metadata:
      labels:
        app: evently-api
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: evently-api
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 2000
      containers:
        - name: evently-api
          image: evently/api:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
            - name: metrics
              containerPort: 8001
              protocol: TCP
          env:
            - name: ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: ENVIRONMENT
            - name: PROJECT_NAME
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: PROJECT_NAME
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: SECRET_KEY
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: DB_PASSWORD
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: evently-config
                  key: REDIS_PORT
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: REDIS_PASSWORD
            - name: SENDGRID_API_KEY
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: SENDGRID_API_KEY
            - name: JWT_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: JWT_SECRET_KEY
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: ENCRYPTION_KEY
            - name: SENDGRID_FROM_EMAIL
              valueFrom:
                secretKeyRef:
                  name: evently-secrets
                  key: SENDGRID_FROM_EMAIL
          envFrom:
            - configMapRef:
                name: evently-config
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/cache
      volumes:
        - name: tmp
          emptyDir: {}
        - name: cache
          emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - evently-api
                topologyKey: kubernetes.io/hostname
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
---
apiVersion: v1
kind: Service
metadata:
  name: evently-api-service
  namespace: evently
  labels:
    app: evently-api
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: metrics
      port: 8001
      targetPort: metrics
      protocol: TCP
  selector:
    app: evently-api
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: evently-api-hpa
  namespace: evently
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: evently-api
  minReplicas: 3
  maxReplicas: 50
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 10
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60
      selectPolicy: Max
